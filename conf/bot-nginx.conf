# -*- mode: conf-unix -*-

################################################
## Nginx Configuration Example for PilosusBot ##
################################################

##
## Objectives
##
## 1. Redirect all traffic to https
## 2. Use letsencrypt
## 3. Serve static files through Nginx, not uWSGI
## 4. Serve all other requests through uWSGI application server

##
## See also
##
## Traffic redirection
## https://serverfault.com/questions/67316/in-nginx-how-can-i-rewrite-all-http-requests-to-https-while-maintaining-sub-dom
##
## Nginx Optimization
## https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
##
## letsencrypt
## https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-centos-7
##

# routing
upstream bot {
    server unix:/var/run/bot/bot-nginx.sock;
}

## Redirect non-encrypted traffic to the port 443
server {
    listen         80;
    server_name    telegram.pilosus.org;
    return         301 https://$server_name$request_uri;
}

## Encrypted traffic
server {
    ## https
    listen 443 ssl;
    server_name telegram.pilosus.org;

    ## Path to letsencrypt keys
    ssl_certificate /etc/letsencrypt/live/telegram.pilosus.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/telegram.pilosus.org/privkey.pem;

    ########################################################################
    # from https://cipherli.st/                                            #
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
    ########################################################################

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ##################################
    # END https://cipherli.st/ BLOCK #
    ##################################

    ssl_dhparam /etc/ssl/certs/dhparam.pem;


    ## letsencrypt path
    location ^~ /.well-known {
        root /var/www/bot;
        satisfy all;
        allow all;
    }

    ## Settings to by-pass for static files
    location ^~ /static/(.*)  {
        alias /var/www/bot/PilosusBot/static/$1;
        expires 365d;
    }

    ## Proxying connections to application servers
    location / {
        include            uwsgi_params;
        uwsgi_pass         bot;
    }
}
